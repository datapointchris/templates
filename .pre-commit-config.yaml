fail_fast: true
repos:
  - repo: local
    hooks:
      - id: check-venv
        name: Activate virtual environment
        stages: [commit]
        language: system
        entry: zsh -c 'source "$(git rev-parse --show-toplevel)/.venv/bin/activate"'
        pass_filenames: false
        always_run: true
  - repo: local
    hooks:
      - id: set-dev-env
        name: Set ENVIRONMENT variable to development
        stages: [commit]
        language: system
        entry: zsh -c 'export ENVIRONMENT=development'
        pass_filenames: false
        always_run: true
  - repo: local
    hooks:
      - id: git-secret
        name: Use git-secret to hide MY secrets
        stages: [commit]
        language: system
        entry: git-secret hide -m
        pass_filenames: false
        always_run: true
  - repo: https://github.com/awslabs/git-secrets
    rev: b9e96b3212fa06aea65964ff0d5cda84ce935f38
    hooks:
    - id: git-secrets
      name: Use git-secrets to scan for secrets in repo
      entry: git-secrets --scan
      files: .
      args: [--untracked]
  - repo: https://github.com/python-poetry/poetry
    rev: '1.3.0'
    hooks:
      - id: poetry-check
      - id: poetry-lock
      - id: poetry-export
        args: ["-f", "requirements.txt", "-o", "requirements.txt"]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: end-of-file-fixer
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
  - repo: https://github.com/psf/black
    rev: 23.1.0
    hooks:
      - id: black
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
  - repo: https://github.com/adamchainz/blacken-docs
    rev: 1.13.0
    hooks:
      - id: blacken-docs
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.33.0
    hooks:
      - id: markdownlint
        args: [--fix]
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.9.0
    hooks:
      - id: shellcheck
      #       args: ["--severity=warning"]  # Optionally only show errors and warnings
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        args: [--config=pyproject.toml]
  - repo: https://github.com/dosisod/refurb
    rev: v1.12.0
    hooks:
      - id: refurb
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
      - id: pyupgrade
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.0.1
    hooks:
      - id: mypy
        args: ["--install-types", "--non-interactive"]
  - repo: local
    hooks:
      - id: pytest
        name: pytest with coverage
        stages: [commit]
        language: system
        entry: pytest --cov=ichrisbirch
        types: [python]
        pass_filenames: false
        always_run: true
